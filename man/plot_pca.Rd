% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_pca.R
\name{plot_pca}
\alias{plot_pca}
\title{Plot PCA}
\usage{
plot_pca(
  input,
  pcs = c(1, 2),
  fill = NULL,
  fill_lab = NULL,
  fill_val = c("#1f77b4", "#ff7f0e", "#279e68", "#8c564b", "#e377c2", "#aec7e8",
    "#b5bd61"),
  shape = NULL,
  shape_lab = NULL,
  shape_val = seq(21, 25, 1)
)
}
\arguments{
\item{input}{data.frame or tibble with columns containing PC values as produced by rnaseqtools::run_pca, and optionally columns containing fill and shape categorical variables.}

\item{pcs}{numeric vector of length 2 representing the principal components to plot on x and y axes.}

\item{fill}{character vector of length 1 representing the categorical variable to use for color-coding datapoints. Should be a column name of input.}

\item{fill_lab}{character vector of length 1 representing the fill label to use in plot legend.}

\item{fill_val}{character vector of colors to use for plotting.}

\item{shape}{character vector of length 1 representing the categorical variable to use for shape-coding datapoints. Should be a column name of input.}

\item{shape_lab}{character vector of length 1 representing the shape label to use in plot legend.}

\item{shape_val}{numeric vector of shapes to use for plotting.}
}
\value{
a ggplot object with selected PCs on x and y axes, and optionally color- and shape-coding of datapoints by categorical variables.
}
\description{
Plot PCA
}
\examples{
# Run PCA
pca_results <- run_pca(input = log2_tpm1p_ex,
                       pcs = 1:10)

# Join sample metadata to PCA results
pca_results <- pca_results \%>\%
  dplyr::left_join(sample_metadata_ex,
                   by = dplyr::join_by(barcode))

# Plot PC1 against PC2
plot_pca(input = pca_results,
         pcs = c(1,2),
         fill = "donor_id",
         fill_lab = NULL,
         fill_val = c("#1f77b4","#e377c2", "#279e68"),
         shape = "treatment",
         shape_lab = NULL,
         shape_val = c(21, 23))

}
