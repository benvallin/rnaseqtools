% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_rescaled_tpm.R
\name{plot_rescaled_tpm}
\alias{plot_rescaled_tpm}
\title{Plot averaged rescaled TPMs}
\usage{
plot_rescaled_tpm(
  input,
  feature_type = "genes",
  feature_id,
  grp_id,
  error_bar = "sd",
  y_label = NULL,
  title = NULL,
  colors = c("#5d76cb", "#ff9e00", "#ca3767", "#38a3a5", "#f49cbb", "#858ae3", "#ffd500",
    "#2ba84a", "#fc6dab", "#7637da")
)
}
\arguments{
\item{input}{tibble produced by rnaseqtools::average_rescaled_tpm or rnaseqtools::average_sum_rescaled_tpm.}

\item{feature_type}{character vector of length 1 or name representing feature type. Must be one of genes or genesets.}

\item{feature_id}{character vector of length 1 or name representing feature ID. Must be a column name of input.}

\item{grp_id}{character vector of length 1 or name representing sample groups to display on x axis. Must be a column name of input.}

\item{error_bar}{character vector of length 1 or name representing metric to use for drawing error bars. Must be one of sd or sem.}

\item{y_label}{character vector of length 1 representing x axis label.}

\item{title}{character vector of length 1 representing plot title.}

\item{colors}{character vector of colors to use for column fill based on <feature_id>.}
}
\value{
a ggplot object with averaged (summed) rescaled TPMs split by sample group. Labels express feature abundance as a percentage of all features for each group.
}
\description{
Plot averaged rescaled TPMs
}
\examples{
## Case 1: plot rescaled TPMs averaged by groups ##
# Define genes of interest
genes <- calcium_genes_ex \%>\%
  dplyr::filter(protein_complex == "SERCA") \%>\%
  dplyr::pull(ensembl_gene_id)

# Rescale TPMs for selected genes
resc_tpm <- rescale_tpm(input = bulk_tpm_ex, genes = genes)

# Average rescaled TPMs by disease status using a grp_df providing sample metadata
mean_resc_tpm <- average_rescaled_tpm(input = resc_tpm,
                                      grp_df = bulk_sample_metadata_ex,
                                      sample_id = donor_id,
                                      gene_id = ensembl_gene_id)

# Add gene symbols to averaged rescaled TPMs
mean_resc_tpm <- mean_resc_tpm \%>\%
  dplyr::mutate(disease_status = forcats::fct_relevel(disease_status, c("healthy", "diseased"))) \%>\%
  dplyr::left_join(gene_metadata_ex[, c("ensembl_gene_id", "gene_symbol")],
                   by = dplyr::join_by(ensembl_gene_id))

# Plot averaged rescaled TPMs by disease status
plot_rescaled_tpm(input = mean_resc_tpm,
                  feature_type = "genes",
                  feature_id = gene_symbol,
                  grp_id = disease_status,
                  error_bar = sd,
                  title = "SERCA protein complex")

## Case 2: plot rescaled TPMs summed by sample ID and gene set and then averaged by groups ##
# Define gs_df
gs_df <- calcium_genes_ex \%>\%
  dplyr::select(ensembl_gene_id, protein_complex) \%>\%
  dplyr::filter(!is.na(protein_complex))

# Pull genes of interest from gs_df
genes <- gs_df \%>\%
  dplyr::pull(ensembl_gene_id)

# Rescale TPMs for selected genes
resc_tpm <- rescale_tpm(input = bulk_tpm_ex, genes = genes)

# Sum rescaled TPMs by donor ID and protein complex using a gs_df providing gene metadata
# and then average summed rescaled TPMs by disease status using a grp_df providing sample metadata
mean_sum_resc_tpm <- average_sum_rescaled_tpm(input = resc_tpm,
                                              grp_df = bulk_sample_metadata_ex,
                                              gs_df = gs_df,
                                              sample_id = donor_id,
                                              gene_id = ensembl_gene_id)

# Plot averaged summed rescaled TPMs by disease status
plot_rescaled_tpm(input = mean_sum_resc_tpm,
                  feature_type = "genesets",
                  feature_id = protein_complex,
                  grp_id = disease_status,
                  error_bar = sd,
                  title = "SERCA protein complex")

}
