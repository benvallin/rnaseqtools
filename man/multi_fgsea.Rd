% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_fgsea.R
\name{multi_fgsea}
\alias{multi_fgsea}
\title{Run fgsea::fgsea on multiple collections}
\usage{
multi_fgsea(
  input,
  collections,
  stats,
  gene_id = "ensembl_gene_id",
  min_set_size = 1,
  max_set_size = length(stats) - 1,
  padj_threshold = Inf,
  ...
)
}
\arguments{
\item{input}{data.frame or tibble with gene_id column and collections list-columns.}

\item{collections}{character vector of gene collection names. All elements must be column names of input.}

\item{stats}{named vector of gene-level stats. Names should be in the gene_id column of input.}

\item{gene_id}{character vector of length 1 representing gene ID. Must be a column name of input.}

\item{min_set_size}{minimal size of a gene set to test. All gene sets below the threshold are excluded.}

\item{max_set_size}{maximal size of a gene set to test. All gene sets above the threshold are excluded.}

\item{padj_threshold}{padj threshold. All gene sets with padj equal or above the threshold are filtered out.}

\item{...}{optional arguments passed to fgsea::fgsea.}
}
\value{
a tibble with results of fgsea::fgsea runs on multiple collections.
}
\description{
Run fgsea::fgsea on multiple collections
}
\examples{
# Make MSigDB collection table
msigdb_collection_table = get_msigdb_collections()

# Define collections of interest
collection_names <- c("MSigDB_H",
                      "MSigDB_C2_CP:REACTOME",
                      "MSigDB_C2_CP:KEGG_LEGACY",
                      "MSigDB_C5_GO:BP")

# Extract gene ranking metric from DESeq2 results
stats <- deseq2_results_ex \%>\%
  dplyr::arrange(dplyr::desc(sign_log2fc_times_minus_log10pvalue)) \%>\%
  dplyr::pull(sign_log2fc_times_minus_log10pvalue, ensembl_gene_id)

# Run fgsea::fgsea on selected collections
fgsea_results <- multi_fgsea(input = msigdb_collection_table,
                             collections = collection_names,
                             stats = stats,
                             gene_id = "ensembl_gene_id")

}
