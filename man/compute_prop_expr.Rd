% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_prop_expr.R
\name{compute_prop_expr}
\alias{compute_prop_expr}
\title{Compute proportion of expressing cells}
\usage{
compute_prop_expr(
  input,
  gene_id = "ensembl_gene_id",
  sample_metadata,
  sample_id_var,
  group_id_vars,
  min_cnt = 0
)
}
\arguments{
\item{input}{data.frame or tibble with character column <gene_id> and double columns representing sample-specific gene counts.}

\item{gene_id}{character vector of length 1 or name representing gene ID. Must be a column name of input.}

\item{sample_metadata}{data.frame or tibble with character / factor columns <sample_id_var> and <group_id_vars>.}

\item{sample_id_var}{character vector of length 1 or name representing sample ID. Must be a column name of sample_metadata.}

\item{group_id_vars}{character vector or vector of names representing grouping variables. Must be column name(s) of sample_metadata.}

\item{min_cnt}{numeric vector of length 1 representing count threshold above which a gene should be considered as expressed.}
}
\value{
a tibble with number of cells, number of expressing cells and proportion of expressing cells per biological group ID.
}
\description{
Compute proportion of expressing cells
}
\examples{
# Convert log2(TPM+1) matrix to TPM tibble with gene IDs as column
tpm_df <- tibble::as_tibble(x = (2^sc_log2_tpm1p_ex)-1,
                            rownames = "ensembl_gene_id")

# Compute proportion of expressing cells per disease status
propr_expr <- compute_prop_expr(input = tpm_df,
                                gene_id = ensembl_gene_id,
                                sample_metadata = sc_sample_metadata_ex,
                                sample_id_var = barcode,
                                group_id_vars = treatment,
                                min_cnt = 10)

}
