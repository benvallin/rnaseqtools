% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multi_limma_rgst.R
\name{multi_limma_rgst}
\alias{multi_limma_rgst}
\title{Run limma rotation gene set tests on multiple collections}
\usage{
multi_limma_rgst(
  y,
  input,
  collections,
  design = NULL,
  contrast = ncol(design),
  gene_id = "ensembl_gene_id",
  limma_test = "fry",
  min_set_size = 1,
  max_set_size = dim(y)[[1]] - 1,
  padj_threshold = Inf,
  ...
)
}
\arguments{
\item{y}{matrix giving log-expression or log-ratio values with rownames corresponding to gene_id.}

\item{input}{data.frame or tibble with gene_id column and collections list-columns.}

\item{collections}{character vector of gene collection names. All elements must be column names of input.}

\item{design}{design matrix.}

\item{contrast}{contrast for which the test is required. Can be an integer specifying a column of design, or the name of a column of design, or a numeric contrast vector of length equal to the number of columns of design.}

\item{gene_id}{character vector of length 1 representing gene ID. Must be a column name of input.}

\item{limma_test}{character vector of length 1 representing limma rotation gene set test. Must be one of "fry", "roast", or "mroast".}

\item{min_set_size}{minimal size of a gene set to test. All gene sets below the threshold are excluded.}

\item{max_set_size}{maximal size of a gene set to test. All gene sets above the threshold are excluded.}

\item{padj_threshold}{padj threshold. All gene sets with padj equal or above the threshold are filtered out.}

\item{...}{optional arguments passed to limma test.}
}
\value{
a tibble with results of limma rotation gene set test runs on multiple collections.
}
\description{
Run limma rotation gene set tests on multiple collections
}
\examples{
# Make MSigDB collection table
msigdb_collection_table = get_msigdb_collections()

# Define collections of interest
collection_names <- c("MSigDB_H", "MSigDB_C2_CP:REACTOME", "MSigDB_C2_CP:KEGG", "MSigDB_C5_GO:BP")

# Define design matrix
model_formula <- "~ treatment + donor_id"

design <- model.matrix(object = formula(model_formula), data = sample_metadata)

design <- design[, which(colSums(design) != 0), drop = FALSE]

# Run limma::fry on selected collections
fry_results <- multi_limma_rgst(y = log2_tpm1p,
                                input = msigdb_collection_table,
                                collections = collection_names,
                                design = design,
                                contrast = "treatmenttreated",
                                gene_id = "ensembl_gene_id",
                                limma_test = "fry")

}
